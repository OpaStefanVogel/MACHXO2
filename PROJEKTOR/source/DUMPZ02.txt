( - LOOP's
-1 CRBIT !
: I RP @ 1 + @ ;
: J RP @ 3 + @ ;
: K RP @ 5 + @ ;
: (DO) SWAP R> ROT ROT >R >R >R ;
: (LOOP) R> R> 1+ DUP R < IF >R 0 
  ELSE R> DROP DROP -1 END_IF SWAP >R ;
: (+LOOP) R> R>  ROT DUP  0< IF + R OVER
  ELSE + DUP R END_IF < IF >R 0 
  ELSE R> DROP DROP -1 END_IF SWAP >R  ;
IMMEDIATE: DO COMPILE (DO) HERE ;
IMMEDIATE: LOOP COMPILE (LOOP) 0BRANCH, ;
IMMEDIATE: +LOOP COMPILE (+LOOP) 0BRANCH, ;
( : LL 0 DO I . LOOP ; 7 LL ( ok geht

( - Variablen
2F00 CONSTANT RAMP1
RAMP1 1+ RAMP1 !
: VARIABLE RAMP1 @ DUP CONSTANT DUP 1+ RAMP1 ! ! ;
RAMP1 VARIABLE RAMP3 ( RAMP3 TIB RAMP1
: RAMBUF ( <name>  n --> )
  MINUS RAMP3 +! RAMP3 @ CONSTANT ; ( oo INDVAR muss da her )


( - noch paar hilfreiche Funktionen:
: DUMP ( addr n --> )
  0 DO ( CR DUP . ) DUP @ . 1+ LOOP DROP ;

: VLIST
  LFA @ BEGIN 
    DUP 1+ @ OVER 2 + @ TYPE 20 EMIT 
    DUP @ WHILE DUP @ + REPEAT
  DROP ;

: WLIST
  LFA @ BEGIN ( CR ) DUP .
    DUP 1+ @ OVER 2 + @ TYPE 20 EMIT 
    DUP @ WHILE DUP @ + REPEAT
  DROP
  ;

A003 CONSTANT RETURN
: REPLACE: ( <name > ) 
  CSP! ( oo )
  20 WORD FIND DUP IF 
    LCFA DROP 1+ ( pfa
(    HERE OVER - 1 - JRBIT XSETBT SWAP !
    HERE SWAP DP ! DUP COMPILE, RETURN , DP !
    1 STAT !
    ELSE 2DROP 3 ERROR END_IF ;

: FORGET ( <name > )
  20 WORD FIND IF 
    DP !
    HERE DUP @ + LFA !
    HERE 1+ @ BZEIG !
    ELSE DROP ." nicht gefunden " END_IF
  ;

: MOVE ( adr1 adr2 n --> )
  BEGIN DUP WHILE >R OVER @ OVER ! SWAP 1+ SWAP 1+ R> 1 - REPEAT DROP 2DROP ;

: FILL ( adr n b --> )
  ROT ROT 0 DO 2DUP ! 1+ LOOP 2DROP ;

: LDUMP LFA @ HERE OVER - DUMP ;

: FEHLERTEXT ( n --> n )
  CR
  DUP 0 = IF ." Division durch Null" END_IF
  DUP 3 = IF ." Wort nicht definiert" END_IF
  DUP 6 = IF ." Eingabezeile zu lang" END_IF
  DUP 9 = IF ." Strukturfehler in IF END_IF BEGIN UNTIL DO LOOP " END_IF
  ;


: ? @ . ;
: ABS DUP 0< IF MINUS END_IF ;
IMMEDIATE: () 0 WORD 2DROP ;
: QUERY ( adr --> n ) TIB @ 100 EXPECT ;
: B. ( a b --> ) SWAP . . ;
: 2@ ( adr --> a b )
  DUP 1+ @ SWAP @ ;
: 2! ( a b adr --> )
  SWAP OVER ! 1+ ! ;
: 2? 2@ B. ;

A012 MCODE D+
A013 MCODE D-

( Divisionen
A014 MCODE DI32 ( 
: DIV32 ( a b d --> r q )
  10 0 DO DI32 LOOP DROP ;
(  10 DI32 ;
: /MOD ( b d --> r q ) 0 ROT ROT DIV32 ;
: / ( b d --> q ) /MOD SWAP DROP ;
: MOD ( b d --> r ) /MOD DROP ;

( ganz neu: Steuerungstasten: ^A bis ^G, weiter ^H=^A ^L=^B ...
8 8 0 FILL
: STRG: : HERE 3 - DUP . @ 1+ DUP . @ DUP . 40 - HERE SWAP 7 AND 8 + ! ;
STRG: ^G 7 EMIT ." <1xPIEP>" ;
STRG: ^F 7 EMIT ." QUIT" QUIT ;
STRG: ^A ." Angehalten f체r genau eine Eingabezeile: " CR 3600 100 EXPECT INTERPRET ." ok";
( wird in DUMPZ03.txt noch fortgesetzt

( INIT3P78.txt
( alle aufgesammelten Erg채nzungen allgemeiner Art:

( - paar Geraeteadressen:
D004 CONSTANT UHR
D005 CONSTANT SWTI
D00D CONSTANT UHRL
D00E CONSTANT UHRH
2D05 CONSTANT XOFFINPUT

( - "Platinen befestigen und entfernen"
20 RAMBUF TLISTE
TLISTE VARIABLE TLISTENZEIGER
: TLISTY 
  TLISTENZEIGER @ TLISTE DO 
    I @ CR DUP . 3 - 2@ SWAP TYPE 
    LOOP ;

0 VARIABLE REMOPFA
0 VARIABLE STATMERK
0 VARIABLE EXXIUHR
: EXXI
  UHRL @ >R
  ( STAT @ STATMERK ! 0 STAT ! ( nicht mehr wg. WIZ_INTERPRET
  TLISTE
  BEGIN DUP TLISTENZEIGER @ < WHILE
    DUP >R @ EXECUTE R> 1+ REPEAT DROP
  ( STATMERK @ STAT ! 
  UHRL @ R> - EXXIUHR ! 
  ;
( ' EXXI 6 1+ - 6000 OR 6 !
' EXXI 4000 + 6 ! ( CR geht momentan +F9XX

: ENTFERNE 
  20 WORD FIND LCFA DROP 1+
  ( DUP 0= IF 3 ERROR END_IF )
  0 REMOPFA !
  TLISTENZEIGER @ TLISTE > IF
    TLISTENZEIGER @ TLISTE DO
      DUP I @ = IF
        1 REMOPFA !
        -1 TLISTENZEIGER +!
        END_IF
      REMOPFA @ IF
        I 1+ @ I !
        END_IF
      LOOP END_IF
  REMOPFA !
  ;
  
: BEFESTIGE ENTFERNE
  REMOPFA @ TLISTENZEIGER @ !
  1 TLISTENZEIGER +! 
  ;




IMMEDIATE: (*REM*) BEGIN CR QUERY " (*END*)" Z= UNTIL ; 


: DABS ( h l --> h' l' )
  OVER 0< IF 0 0 2SWAP D- END_IF ;
: COUNT ( adr --> n )
  DUP BEGIN DUP C@ 20 < NOT WHILE 1+ REPEAT SWAP - ;



(*REM*)
( CASEOFS aus'm PSION:
: CASEOFS ( n  <name> -> )
  DUP RAMBUF
  0 DO
    0 I RAMP3 @ + !
    LOOP
  ;

: CASEOF: ( fn en --> )
  + HERE DPMERK @ - SWAP !
  CSP! 1 STAT !
  ;

: CASEOF ( fn en --> )
  + @ DUP IF
    DPMERK @ + EXECUTE
    ELSE DROP END_IF ;
(*END*)

( - CASE
( : BIT ( i n --> bit )
(   2 ROT DUP 0< IF 99 ERROR ELSE 
(   ^ AND 0= 1 + END_IF ; 

: (OF) ( n r i --> f r' )
  ROT = DUP ROT OR ;
: (RANGE-OF) ( n1 n2 r i --> f r' )
  DUP >R ROT > ROT R> > OR 0= DUP ROT OR ;
( : (BIT-OF) ( n r i --> f r' )
(   ROT BIT DUP ROT OR ;

IMMEDIATE: CASE ( n --> )
  " >R 0 >R" 
  INTERPRET ;
IMMEDIATE: END_CASE ( --> )
  " R> R> 2DROP" 
  INTERPRET ;
IMMEDIATE: OF ( n --> )
  " R> R (OF) >R IF" 
  INTERPRET ;              
IMMEDIATE: RANGE-OF ( n1 n2 --> )
  " R> R (RANGE-OF) >R IF" 
  INTERPRET ;
IMMEDIATE: BIT-OF ( m --> )
  " R> R (BIT-OF) >R IF" 
  INTERPRET ;
IMMEDIATE: ELSEOF ( --> )
  " R 0= IF" INTERPRET ;
IMMEDIATE: END_OF ( --> )
  " END_IF" INTERPRET ;
: ERR ." keine g체ltige RAM-Adresse" QUIT ;
' ERR 4000 OR 12 !
' ERR 4000 OR 10 !

IMMEDIATE: <; 0 STAT ! CSP? HERE 1 - @ 800 OR HERE 1 - ! SMUDGE [ SMUDGE ] ; 
( : T 77 88 DROP <; 
( ' T 8 DUMP
( : W PAUSENBIT ! <;
( ' W 8 DUMP



20 WORD: ESC 1B EMIT 0 DO DUP C@ EMIT 1+ LOOP DROP ;
: SCROLLREGION ESC [2;24r ;
( SCROLLREGION
: FESTPOSITION ESC [s ESC [1;1H ESC [31m ; ( saveC Pos1,1 redcolor
: RUCKPOSITION ESC [u ESC [39m ; ( restoreC defaultcolor


: DEZ ( <dezimalzahl>  -> hexzahl )
  BASE @ >R 0A BASE ! 20 WORD INTERPRET R> BASE ! ;

: PDEZ. ( n --> )
  -1 SWAP
  BEGIN 0A /MOD DUP 0= UNTIL DROP
  BEGIN DUP 0< NOT WHILE 30 + EMIT REPEAT DROP
  20 EMIT
  ;
: DEZ. ( n --> )
  DUP 0< IF MINUS ." -" END_IF
  PDEZ. ;
: XOR ( a b --> axorb ) 
  ( fuer WEBSOCKET_MESSAGE CLIENT )
  OVER NOT OVER AND ROT ROT NOT AND OR ;



(*REM*)
0 VARIABLE UHRHMERK
: WLICHT 
  UHRH @ 
  DUP UHRHMERK @ - IF
    DUP UHRHMERK !
    0FFF AND 
    DUP 100 + 0FFF AND DUP 800 > IF 1000 SWAP - END_IF 2D20 !
    DUP 300 + 0FFF AND DUP 800 > IF 1000 SWAP - END_IF 2D21 !
    DUP 500 + 0FFF AND DUP 800 > IF 1000 SWAP - END_IF 2D22 !
    DUP 700 + 0FFF AND DUP 800 > IF 1000 SWAP - END_IF 2D23 !
    DUP 900 + 0FFF AND DUP 800 > IF 1000 SWAP - END_IF 2D24 !
    DUP B00 + 0FFF AND DUP 800 > IF 1000 SWAP - END_IF 2D25 !
    DUP D00 + 0FFF AND DUP 800 > IF 1000 SWAP - END_IF 2D26 !
    DUP F00 + 0FFF AND DUP 800 > IF 1000 SWAP - END_IF 2D27 !
    END_IF
  DROP
  ;

: WORD2 ( b --> adr n ) ( ergaenzt: 0A 체berlesen
  >R
  IN3 @ IN2 !
  BEGIN 
    IN3 @ C@ R = IN3 @ C@ 20 < OR IN3 @ IN4 @ < AND WHILE
      1 IN3 +! REPEAT
  IN3 @ IN2 !
  BEGIN 
    IN3 @ C@ R = NOT IN3 @ C@ 20 < NOT AND IN3 @ IN4 @ < AND WHILE
      1 IN3 +! REPEAT
  IN2 @ IN3 @ OVER -
  DUP IF 1 IN3 +! END_IF
  R> DROP
  ;

( ' EXECUTE 4000 + ' EMITCODE ' EMIT 2!

: IOSTART
  2C40 2C00 DO I @ I ! LOOP
  2D30 2D14 DO I @ I ! LOOP
  ;
( IOSTART


(*END*)

0 CRBIT !
HERE 2000 HERE - 0 FILL
BZEIG @ FB00 BZEIG @ - 0 FILL
HERE . BZEIG ?
( HERE 0000 DUMPL CR ." DUMP" BZEIG @ E000 DUMPB CR ." DUMP" CR 3000 2C00 DUMPL
CR ." ( " HERE . ." DP ! " BZEIG ? ." BZEIG ! " LFA ? ." LFA ! " RAMP1 ? ." RAMP1 ! " RAMP3 ? ." RAMP3 ! " CR
